"use strict";(self.webpackChunkopenedv_wiki=self.webpackChunkopenedv_wiki||[]).push([[3478],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},33363:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/45-e61eae1eee1e891085d31cd21da73ca5.png"},33404:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/42-43b1d6f77dd797899d0ff14c155c7275.png"},74158:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var i=s(74848),r=s(28453);const t={title:"\u7269\u4f53\u5206\u5272\u5b9e\u9a8c",sidebar_position:16},o="\u7269\u4f53\u5206\u5272\u5b9e\u9a8c",a={id:"Boards/Kendryte/DNK230D/example-ai/segment",title:"\u7269\u4f53\u5206\u5272\u5b9e\u9a8c",description:"\u524d\u8a00",source:"@site/docs/Boards/Kendryte/DNK230D/example-ai/segment.md",sourceDirName:"Boards/Kendryte/DNK230D/example-ai",slug:"/Boards/Kendryte/DNK230D/example-ai/segment",permalink:"/docs/Boards/Kendryte/DNK230D/example-ai/segment",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:16,frontMatter:{title:"\u7269\u4f53\u5206\u5272\u5b9e\u9a8c",sidebar_position:16},sidebar:"KendryteDNK230DSidebar",previous:{title:"\u7269\u4f53\u68c0\u6d4b\u5b9e\u9a8c",permalink:"/docs/Boards/Kendryte/DNK230D/example-ai/object_detect"},next:{title:"\u8f66\u724c\u68c0\u6d4b\u5b9e\u9a8c",permalink:"/docs/Boards/Kendryte/DNK230D/example-ai/licence_det"}},l={},d=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"AI\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd",id:"ai\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd",level:2},{value:"\u786c\u4ef6\u8bbe\u8ba1",id:"\u786c\u4ef6\u8bbe\u8ba1",level:2},{value:"\u4f8b\u7a0b\u529f\u80fd",id:"\u4f8b\u7a0b\u529f\u80fd",level:3},{value:"\u786c\u4ef6\u8d44\u6e90",id:"\u786c\u4ef6\u8d44\u6e90",level:3},{value:"\u539f\u7406\u56fe",id:"\u539f\u7406\u56fe",level:3},{value:"\u5b9e\u9a8c\u4ee3\u7801",id:"\u5b9e\u9a8c\u4ee3\u7801",level:2},{value:"\u8fd0\u884c\u9a8c\u8bc1",id:"\u8fd0\u884c\u9a8c\u8bc1",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\u7269\u4f53\u5206\u5272\u5b9e\u9a8c",children:"\u7269\u4f53\u5206\u5272\u5b9e\u9a8c"})}),"\n",(0,i.jsx)(n.h2,{id:"\u524d\u8a00",children:"\u524d\u8a00"}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u4e0a\u4e00\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u5982\u4f55\u5728CanMV\u4e0b\u4f7f\u7528CanMV AI\u89c6\u89c9\u5f00\u53d1\u6846\u67b6\u548cMicroPython\u7f16\u7a0b\u65b9\u6cd5\u5b9e\u73b0\u7269\u4f53\u68c0\u6d4b\u7684\u529f\u80fd\uff0c\u672c\u7ae0\u5c06\u901a\u8fc7\u7269\u4f53\u5206\u5272\u5b9e\u9a8c\uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528CanMV AI\u89c6\u89c9\u5f00\u53d1\u6846\u67b6\u548cMicroPython\u7f16\u7a0b\u5b9e\u73b0\u5bf980\u79cd\u7269\u4f53\u7684\u56fe\u50cf\u5206\u5272\u3002\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u91c7\u96c6\u6444\u50cf\u5934\u6355\u83b7\u7684\u56fe\u50cf\uff0c\u7136\u540e\u7ecf\u8fc7\u56fe\u50cf\u9884\u5904\u7406\u3001\u6a21\u578b\u63a8\u7406\u548c\u8f93\u51fa\u5904\u7406\u7ed3\u679c\u7b49\u4e00\u7cfb\u5217\u6b65\u9aa4\uff0c\u7cfb\u7edf\u5c06\u8bc6\u522b\u56fe\u50cf\u4e2d\u6240\u6709\u7684\u7269\u4f53\uff0c\u8be5\u6a21\u578b\u4f1a\u5bf9COCO\u768480\u4e2a\u7c7b\u522b\u7684\u76ee\u6807\u7269\u4f53\u8fdb\u884c\u68c0\u6d4b\uff0c\u5f53\u8bc6\u522b\u5230\u76ee\u6807\u7269\u4f53\u65f6\uff0c\u7cfb\u7edf\u4f1a\u5728\u76ee\u6807\u7269\u4f53\u4e0a\u4f7f\u7528\u4e00\u5b9a\u900f\u660e\u5ea6\u7684\u989c\u8272\u8fdb\u884c\u586b\u5145\uff0c\u5e76\u5728\u7269\u4f53\u4e0a\u65b9\u663e\u793a\u8bc6\u522b\u4fe1\u606f\u548c\u8bc6\u522b\u7684\u53ef\u4fe1\u5ea6\uff0c\u4e0d\u540c\u7c7b\u522b\u7684\u7269\u4f53\u4f1a\u7528\u4e0d\u540c\u989c\u8272\u8fdb\u884c\u586b\u5145\uff0c\u6700\u540e\uff0c\u5c06\u7ed3\u679c\u7ed8\u5236\u5e76\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\u3002\u901a\u8fc7\u672c\u7ae0\u7684\u5b66\u4e60\uff0c\u8bfb\u8005\u5c06\u638c\u63e1\u5982\u4f55\u5728CanMV\u4e0b\u4f7f\u7528CanMV AI\u89c6\u89c9\u5f00\u53d1\u6846\u67b6\u548cMicroPython\u7f16\u7a0b\u65b9\u6cd5\u5b9e\u73b0\u7269\u4f53\u5206\u5272\u7684\u529f\u80fd\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"ai\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd",children:"AI\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd"}),"\n",(0,i.jsxs)(n.p,{children:["\u4e3a\u4e86\u7b80\u5316AI\u5f00\u53d1\u6d41\u7a0b\u5e76\u964d\u4f4eAI\u5f00\u53d1\u96be\u5ea6\uff0cCanMV\u5b98\u65b9\u9488\u5bf9K230D\u4e13\u95e8\u642d\u5efa\u4e86AI\u5f00\u53d1\u6846\u67b6\uff0c\u6709\u5173AI\u5f00\u53d1\u6846\u67b6\u7684\u4ecb\u7ecd\uff0c\u8bf7\u89c1",(0,i.jsx)(n.a,{href:"/docs/Boards/Kendryte/DNK230D/example-ai/development_framework",children:"CanMV AI\u5f00\u53d1\u6846\u67b6"})]}),"\n",(0,i.jsx)(n.h2,{id:"\u786c\u4ef6\u8bbe\u8ba1",children:"\u786c\u4ef6\u8bbe\u8ba1"}),"\n",(0,i.jsx)(n.h3,{id:"\u4f8b\u7a0b\u529f\u80fd",children:"\u4f8b\u7a0b\u529f\u80fd"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'\u672c\u5b9e\u9a8c\u7684\u529f\u80fd\u548c\u4e0a\u4e00\u7ae0\u975e\u5e38\u76f8\u4f3c\uff0c\u9996\u5148\u83b7\u53d6\u6444\u50cf\u5934\u8f93\u51fa\u7684\u56fe\u50cf\uff0c\u7136\u540e\u5c06\u56fe\u50cf\u8f93\u5165\u5230CanMV K230D\u7684AI\u6a21\u578b\u8fdb\u884c\u63a8\u7406\u3002\u672c\u5b9e\u9a8c\u4f7f\u7528\u4e86\u4e00\u4e2a\u57fa\u4e8eYOLOv8n\u7684\u7269\u4f53\u5206\u5272\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u7528\u4e8e\u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u6240\u6709\u7269\u4f53\uff0c\u652f\u6301\u8bc6\u522b80\u79cd\u7269\u4f53\uff0c\u53ef\u6839\u636e\u8bc6\u522b\u7ed3\u679c\u8fdb\u884c\u56fe\u50cf\u5206\u5272\uff0c\u8fd980\u79cd\u7269\u4f53\u5206\u522b\u662f\uff1a["person", "bicycle", "car", "motorcycle", "airplane", "bus", "train", "truck", "boat", "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella", "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "couch", "potted plant", "bed", "dining table", "toilet", "tv", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]'}),"\n",(0,i.jsx)(n.p,{children:"\u5bf9\u5e94\u7684\u4e2d\u6587\u540d\u79f0\u662f\uff1a[\u201c\u4eba\u201d\u3001\u201c\u81ea\u884c\u8f66\u201d\u3001\u201c\u6c7d\u8f66\u201d\u3001\u201c\u6469\u6258\u8f66\u201d\u3001\u201c\u98de\u673a\u201d\u3001\u201c\u516c\u5171\u6c7d\u8f66\u201d\u3001\u201c\u706b\u8f66\u201d\u3001\u201c\u5361\u8f66\u201d\u3001\u201c\u8239\u201d\u3001\u201c\u4ea4\u901a\u706f\u201d\u3001\u201c\u6d88\u9632\u6813\u201d\u3001\u201c\u505c\u8f66\u6807\u5fd7\u201d\u3001\u201c\u505c\u8f66\u6536\u8d39\u8868\u201d\u3001\u201c\u957f\u51f3\u201d\u3001\u201c\u9e1f\u201d\u3001\u201c\u732b\u201d\u3001\u201c\u72d7\u201d\u3001\u201c\u9a6c\u201d\u3001\u201c\u7f8a\u201d\u3001\u201c\u725b\u201d\u3001\u201c\u5927\u8c61\u201d\u3001\u201c\u718a\u201d\u3001\u201c\u6591\u9a6c\u201d\u3001\u201c\u957f\u9888\u9e7f\u201d\u3001\u201c\u80cc\u5305\u201d\u3001\u201c\u96e8\u4f1e\u201d\u3001\u201c\u624b\u63d0\u5305\u201d\u3001\u201c\u9886\u5e26\u201d\u3001\u201c\u624b\u63d0\u7bb1\u201d\u3001\u201c\u98de\u76d8\u201d\u3001\u201c\u6ed1\u96ea\u677f\u201d\u3001\u201c\u6ed1\u96ea\u677f\u201d\u3001\u201c\u8fd0\u52a8\u7403\u201d\u3001\u201c\u98ce\u7b5d\u201d\u3001\u201c\u68d2\u7403\u68d2\u201d\u3001\u201c\u68d2\u7403\u624b\u5957\u201d\u3001\u201c\u6ed1\u677f\u201d\u3001\u201c\u51b2\u6d6a\u677f\u201d\u3001\u201c\u7f51\u7403\u62cd\u201d\u3001\u201c\u74f6\u5b50\u201d\u3001\u201c\u9152\u676f\u201d\u3001\u201c\u676f\u5b50\u201d\u3001\u201c\u53c9\u5b50\u201d\u3001\u201c\u5200\u5b50\u201d\u3001\u201c\u52fa\u5b50\u201d\u3001\u201c\u7897\u201d\u3001\u201c\u9999\u8549\u201d\u3001\u201c\u82f9\u679c\u201d\u3001\u201c\u4e09\u660e\u6cbb\u201d\u3001\u201c\u6a59\u5b50\u201d\u3001\u201c\u897f\u5170\u82b1\u201d\u3001\u201c\u80e1\u841d\u535c\u201d\u3001\u201c\u70ed\u72d7\u201d\u3001\u201c\u62ab\u8428\u201d\u3001\u201c\u751c\u751c\u5708\u201d\u3001\u201c\u86cb\u7cd5\u201d\u3001\u201c\u6905\u5b50\u201d\u3001\u201c\u6c99\u53d1\u201c\u76c6\u683d\u201d\u3001\u201c\u5e8a\u201d\u3001\u201c\u9910\u684c\u201d\u3001\u201c\u9a6c\u6876\u201d\u3001\u201c\u7535\u89c6\u201d\u3001\u201c\u7b14\u8bb0\u672c\u7535\u8111\u201d\u3001\u201c\u9f20\u6807\u201d\u3001\u201c\u9065\u63a7\u5668\u201d\u3001\u201c\u952e\u76d8\u201d\u3001\u201c\u624b\u673a\u201d\u3001\u201c\u5fae\u6ce2\u7089\u201d\u3001\u201c\u70e4\u7bb1\u201d\u3001\u201c\u70e4\u9762\u5305\u673a\u201d\u3001\u201c\u6c34\u69fd\u201d\u3001\u201c\u51b0\u7bb1\u201d\u3001\u201c\u4e66\u201d\u3001\u201c\u949f\u8868\u201d\u3001\u201c\u82b1\u74f6\u201d\u3001\u201c\u526a\u5200\u201d\u3001\u201c\u6cf0\u8fea\u718a\u201d\u3001\u201c\u5439\u98ce\u673a\u201d\u3001\u201c\u7259\u5237\u201d]\uff0c\u5f53\u68c0\u6d4b\u5230\u56fe\u50cf\u4e2d\u5b58\u5728\u76ee\u6807\u7269\u4f53\u65f6\uff0c\u7cfb\u7edf\u4f1a\u5bf9\u6bcf\u79cd\u7269\u4f53\u586b\u5145\u4e0d\u540c\u989c\u8272\u8fdb\u884c\u56fe\u50cf\u5206\u5272\uff0c\u5e76\u5728\u7269\u4f53\u4e0a\u65b9\u7ed8\u5236\u7269\u4f53\u8bc6\u522b\u7ed3\u679c\u548c\u53ef\u4fe1\u5ea6\u3002\u6700\u540e\uff0c\u5c06\u5904\u7406\u540e\u7684\u56fe\u50cf\u663e\u793a\u5728LCD\u4e0a\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u786c\u4ef6\u8d44\u6e90",children:"\u786c\u4ef6\u8d44\u6e90"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"\u672c\u7ae0\u5b9e\u9a8c\u5185\u5bb9\u4e3b\u8981\u8bb2\u89e3K230D\u7684\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5668KPU\u7684\u4f7f\u7528\uff0c\u65e0\u9700\u5173\u6ce8\u786c\u4ef6\u8d44\u6e90\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u539f\u7406\u56fe",children:"\u539f\u7406\u56fe"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"\u672c\u7ae0\u5b9e\u9a8c\u5185\u5bb9\u4e3b\u8981\u8bb2\u89e3K230D\u7684\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5668KPU\u7684\u4f7f\u7528\uff0c\u65e0\u9700\u5173\u6ce8\u539f\u7406\u56fe\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5b9e\u9a8c\u4ee3\u7801",children:"\u5b9e\u9a8c\u4ee3\u7801"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from libs.PipeLine import PipeLine, ScopedTiming\nfrom libs.AIBase import AIBase\nfrom libs.AI2D import Ai2d\nimport os\nimport ujson\nfrom media.media import *\nfrom media.sensor import *\nfrom time import *\nimport nncase_runtime as nn\nimport ulab.numpy as np\nimport time\nimport utime\nimport image\nimport random\nimport gc\nimport sys\nimport aidemo\n\n# \u81ea\u5b9a\u4e49YOLOv8\u5206\u5272\u7c7b\nclass SegmentationApp(AIBase):\n    def __init__(self,kmodel_path,labels,model_input_size,confidence_threshold=0.2,nms_threshold=0.5,mask_threshold=0.5,rgb888p_size=[224,224],display_size=[1920,1080],debug_mode=0):\n        super().__init__(kmodel_path,model_input_size,rgb888p_size,debug_mode)\n        # \u6a21\u578b\u8def\u5f84\n        self.kmodel_path=kmodel_path\n        # \u5206\u5272\u7c7b\u522b\u6807\u7b7e\n        self.labels=labels\n        # \u6a21\u578b\u8f93\u5165\u5206\u8fa8\u7387\n        self.model_input_size=model_input_size\n        # \u7f6e\u4fe1\u5ea6\u9608\u503c\n        self.confidence_threshold=confidence_threshold\n        # nms\u9608\u503c\n        self.nms_threshold=nms_threshold\n        # mask\u9608\u503c\n        self.mask_threshold=mask_threshold\n        # sensor\u7ed9\u5230AI\u7684\u56fe\u50cf\u5206\u8fa8\u7387\n        self.rgb888p_size=[ALIGN_UP(rgb888p_size[0],16),rgb888p_size[1]]\n        # \u663e\u793a\u5206\u8fa8\u7387\n        self.display_size=[ALIGN_UP(display_size[0],16),display_size[1]]\n        self.debug_mode=debug_mode\n        # \u68c0\u6d4b\u6846\u9884\u7f6e\u989c\u8272\u503c\n        self.color_four=[(255, 220, 20, 60), (255, 119, 11, 32), (255, 0, 0, 142), (255, 0, 0, 230),\n                         (255, 106, 0, 228), (255, 0, 60, 100), (255, 0, 80, 100), (255, 0, 0, 70),\n                         (255, 0, 0, 192), (255, 250, 170, 30), (255, 100, 170, 30), (255, 220, 220, 0),\n                         (255, 175, 116, 175), (255, 250, 0, 30), (255, 165, 42, 42), (255, 255, 77, 255),\n                         (255, 0, 226, 252), (255, 182, 182, 255), (255, 0, 82, 0), (255, 120, 166, 157)]\n        # \u5206\u5272\u7ed3\u679c\u7684numpy.array\uff0c\u7528\u4e8e\u7ed9\u5230aidemo\u540e\u5904\u7406\u63a5\u53e3\n        self.masks=np.zeros((1,self.display_size[1],self.display_size[0],4))\n        # Ai2d\u5b9e\u4f8b\uff0c\u7528\u4e8e\u5b9e\u73b0\u6a21\u578b\u9884\u5904\u7406\n        self.ai2d=Ai2d(debug_mode)\n        # \u8bbe\u7f6eAi2d\u7684\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u548c\u7c7b\u578b\n        self.ai2d.set_ai2d_dtype(nn.ai2d_format.NCHW_FMT,nn.ai2d_format.NCHW_FMT,np.uint8, np.uint8)\n\n    # \u914d\u7f6e\u9884\u5904\u7406\u64cd\u4f5c\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86pad\u548cresize\uff0cAi2d\u652f\u6301crop/shift/pad/resize/affine\uff0c\u5177\u4f53\u4ee3\u7801\u8bf7\u6253\u5f00/sdcard/app/libs/AI2D.py\u67e5\u770b\n    def config_preprocess(self,input_image_size=None):\n        with ScopedTiming("set preprocess config",self.debug_mode > 0):\n            # \u521d\u59cb\u5316ai2d\u9884\u5904\u7406\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e3asensor\u7ed9\u5230AI\u7684\u5c3a\u5bf8\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6einput_image_size\u81ea\u884c\u4fee\u6539\u8f93\u5165\u5c3a\u5bf8\n            ai2d_input_size=input_image_size if input_image_size else self.rgb888p_size\n            top,bottom,left,right=self.get_padding_param()\n            self.ai2d.pad([0,0,0,0,top,bottom,left,right], 0, [114,114,114])\n            self.ai2d.resize(nn.interp_method.tf_bilinear, nn.interp_mode.half_pixel)\n            self.ai2d.build([1,3,ai2d_input_size[1],ai2d_input_size[0]],[1,3,self.model_input_size[1],self.model_input_size[0]])\n\n    # \u81ea\u5b9a\u4e49\u5f53\u524d\u4efb\u52a1\u7684\u540e\u5904\u7406\n    def postprocess(self,results):\n        with ScopedTiming("postprocess",self.debug_mode > 0):\n            # \u8fd9\u91cc\u4f7f\u7528\u4e86aidemo\u7684segment_postprocess\u63a5\u53e3\n            seg_res = aidemo.segment_postprocess(results,[self.rgb888p_size[1],self.rgb888p_size[0]],self.model_input_size,[self.display_size[1],self.display_size[0]],self.confidence_threshold,self.nms_threshold,self.mask_threshold,self.masks)\n            return seg_res\n\n    # \u7ed8\u5236\u7ed3\u679c\n    def draw_result(self,pl,seg_res):\n        with ScopedTiming("display_draw",self.debug_mode >0):\n            if seg_res[0]:\n                pl.osd_img.clear()\n                mask_img=image.Image(self.display_size[0], self.display_size[1], image.ARGB8888,alloc=image.ALLOC_REF,data=self.masks)\n                pl.osd_img.copy_from(mask_img)\n                dets,ids,scores = seg_res[0],seg_res[1],seg_res[2]\n                for i, det in enumerate(dets):\n                    x1, y1, w, h = map(lambda x: int(round(x, 0)), det)\n                    pl.osd_img.draw_string_advanced(x1,y1-50,32, " " + self.labels[int(ids[i])] + " " + str(round(scores[i],2)) , color=self.get_color(int(ids[i])))\n            else:\n                pl.osd_img.clear()\n\n    # \u8ba1\u7b97padding\u53c2\u6570\n    def get_padding_param(self):\n        dst_w = self.model_input_size[0]\n        dst_h = self.model_input_size[1]\n        ratio_w = float(dst_w) / self.rgb888p_size[0]\n        ratio_h = float(dst_h) / self.rgb888p_size[1]\n        if ratio_w < ratio_h:\n            ratio = ratio_w\n        else:\n            ratio = ratio_h\n        new_w = (int)(ratio * self.rgb888p_size[0])\n        new_h = (int)(ratio * self.rgb888p_size[1])\n        dw = (dst_w - new_w) / 2\n        dh = (dst_h - new_h) / 2\n        top = (int)(round(dh - 0.1))\n        bottom = (int)(round(dh + 0.1))\n        left = (int)(round(dw - 0.1))\n        right = (int)(round(dw + 0.1))\n        return  top, bottom, left, right\n\n    # \u6839\u636e\u5f53\u524d\u7c7b\u522b\u7d22\u5f15\u83b7\u53d6\u6846\u7684\u989c\u8272\n    def get_color(self, x):\n        idx=x%len(self.color_four)\n        return self.color_four[idx]\n\n\nif __name__=="__main__":\n    # \u663e\u793a\u6a21\u5f0f\uff0c\u9ed8\u8ba4"hdmi",\u53ef\u4ee5\u9009\u62e9"hdmi"\u548c"lcd"\n    display_mode="lcd"\n    if display_mode=="hdmi":\n        display_size=[1920,1080]\n    else:\n        display_size=[640,480]\n    # \u6a21\u578b\u8def\u5f84\n    kmodel_path="/sdcard/examples/kmodel/yolov8n_seg_320.kmodel"\n    labels = ["person", "bicycle", "car", "motorcycle", "airplane", "bus", "train", "truck", "boat", "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella", "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "couch", "potted plant", "bed", "dining table", "toilet", "tv", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]\n    #\u5176\u5b83\u53c2\u6570\u8bbe\u7f6e\n    confidence_threshold = 0.2\n    nms_threshold = 0.5\n    mask_threshold=0.5\n    rgb888p_size=[320,320]\n\n    # \u521d\u59cb\u5316PipeLine\n    sensor = Sensor(width=1280, height=960) # \u6784\u5efa\u6444\u50cf\u5934\u5bf9\u8c61\n    pl = PipeLine(rgb888p_size=rgb888p_size, display_size=display_size, display_mode=display_mode)\n    pl.create(sensor=sensor)  # \u521b\u5efaPipeLine\u5b9e\u4f8b\n    # \u521d\u59cb\u5316\u81ea\u5b9a\u4e49YOLOV8\u5206\u5272\u793a\u4f8b\n    seg=SegmentationApp(kmodel_path,labels=labels,model_input_size=[320,320],confidence_threshold=confidence_threshold,nms_threshold=nms_threshold,mask_threshold=mask_threshold,rgb888p_size=rgb888p_size,display_size=display_size,debug_mode=0)\n    seg.config_preprocess()\n    try:\n        while True:\n            os.exitpoint()\n            with ScopedTiming("total",1):\n                # \u83b7\u53d6\u5f53\u524d\u5e27\u6570\u636e\n                img=pl.get_frame()\n                # \u63a8\u7406\u5f53\u524d\u5e27\n                seg_res=seg.run(img)\n                # \u6253\u5370\u7ed3\u679c\n                # print(seg_res)\n                # \u7ed8\u5236\u7ed3\u679c\u5230PipeLine\u7684osd\u56fe\u50cf\n                seg.draw_result(pl,seg_res)\n                # \u663e\u793a\u5f53\u524d\u7684\u7ed8\u5236\u7ed3\u679c\n                pl.show_image()\n                gc.collect()\n    except Exception as e:\n        sys.print_exception(e)\n    finally:\n        seg.deinit()\n        pl.destroy()\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u53ef\u4ee5\u770b\u5230\u4e00\u5f00\u59cb\u662f\u5148\u5b9a\u4e49\u663e\u793a\u6a21\u5f0f\u3001\u56fe\u50cf\u5927\u5c0f\u3001\u6a21\u578b\u76f8\u5173\u7684\u4e00\u4e9b\u53d8\u91cf\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u63a5\u7740\u662f\u901a\u8fc7\u521d\u59cb\u5316PipeLine\uff0c\u8fd9\u91cc\u4e3b\u8981\u521d\u59cb\u5316sensor\u548cdisplay\u6a21\u5757\uff0c\u914d\u7f6e\u6444\u50cf\u5934\u8f93\u51fa\u4e24\u8def\u4e0d\u540c\u7684\u683c\u5f0f\u548c\u5927\u5c0f\u7684\u56fe\u50cf\uff0c\u4ee5\u53ca\u8bbe\u7f6e\u663e\u793a\u6a21\u5f0f\uff0c\u5b8c\u6210\u521b\u5efaPipeLine\u5b9e\u4f8b\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u7136\u540e\u8c03\u7528\u81ea\u5b9a\u4e49SegmentationApp\u7c7b\u6784\u5efa\u7269\u4f53\u5206\u5272\u7c7b\uff0cSegmentationApp\u7c7b\u4f1a\u5bf9AIBase\u63a5\u53e3\u7684\u521d\u59cb\u5316\u4ee5\u53ca\u4f7f\u7528Ai2D\u63a5\u53e3\u7684\u65b9\u6cd5\u5b9a\u4e49\u7269\u4f53\u5206\u5272\u6a21\u578b\u8f93\u5165\u56fe\u50cf\u7684\u9884\u5904\u7406\u65b9\u6cd5\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u6700\u540e\uff0c\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u4e0d\u65ad\u83b7\u53d6\u6444\u50cf\u5934\u8f93\u51fa\u7684RGB888\u683c\u5f0f\u56fe\u50cf\u5e27\uff0c\u7136\u540e\u5c06\u56fe\u50cf\u8f93\u5165\u5230\u7269\u4f53\u5206\u5272\u6a21\u578b\u8fdb\u884c\u63a8\u7406\u3002\u63a8\u7406\u7ed3\u679c\u901a\u8fc7print\u6253\u5370\u51fa\u6765\uff0c\u6839\u636e\u8bc6\u522b\u7684\u4fe1\u606f\u4f7f\u7528\u5177\u6709\u4e00\u5b9a\u900f\u660e\u5ea6\u7684\u4e0d\u540c\u989c\u8272\u8fdb\u884c\u586b\u5145\uff0c\u4e0d\u540c\u7c7b\u522b\u7684\u7269\u4f53\u586b\u5145\u7684\u989c\u8272\u5404\u4e0d\u76f8\u540c\u3002\u5728\u77e9\u5f62\u6846\u4e0a\u65b9\u7ed8\u5236\u68c0\u6d4b\u7ed3\u679c\u53ca\u5176\u53ef\u4fe1\u5ea6\uff0c\u5e76\u5728LCD\u4e0a\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u50cf\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"\u8fd0\u884c\u9a8c\u8bc1",children:"\u8fd0\u884c\u9a8c\u8bc1"}),"\n",(0,i.jsx)(n.p,{children:"\u5b9e\u9a8c\u539f\u56fe\u5982\u4e0b\u6240\u793a\uff1a"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"01",src:s(33404).A+"",width:"1065",height:"741"})}),"\n",(0,i.jsx)(n.p,{children:"\u5c06K230D BOX\u5f00\u53d1\u677f\u8fde\u63a5CanMV IDE\uff0c\u70b9\u51fbCanMV IDE\u4e0a\u7684\u201c\u5f00\u59cb(\u8fd0\u884c\u811a\u672c)\u201d\u6309\u94ae\u540e\uff0c\u5c06\u6444\u50cf\u5934\u5bf9\u51c6\u9700\u8981\u8bc6\u522b\u7684\u533a\u57df\uff0c\u8ba9\u5176\u91c7\u96c6\u5230\u7269\u4f53\u4fe1\u606f\uff0c\u968f\u540e\u4fbf\u80fd\u5728LCD\u4e0a\u770b\u5230\u6444\u50cf\u5934\u8f93\u51fa\u7684\u56fe\u50cf\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u7cfb\u7edf\u4f1a\u7528\u4e0d\u540c\u989c\u8272\u586b\u5145\u4e0d\u540c\u7684\u7269\u4f53\uff0c\u5e76\u5728\u7269\u4f53\u4e0a\u65b9\u663e\u793a\u8bc6\u522b\u7684\u7269\u4f53\u4fe1\u606f\u53ca\u5176\u53ef\u4fe1\u5ea6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"01",src:s(33363).A+"",width:"510",height:"383"})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);