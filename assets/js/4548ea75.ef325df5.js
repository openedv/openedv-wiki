"use strict";(self.webpackChunkopenedv_wiki=self.webpackChunkopenedv_wiki||[]).push([[1312],{4546:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>p,frontMatter:()=>_,metadata:()=>l,toc:()=>o});var s=i(4848),d=i(8453);const _={title:"\u8f66\u724c\u53f7\u8bc6\u522b\u5b9e\u9a8c",sidebar_position:18},r="\u8f66\u724c\u53f7\u8bc6\u522b\u5b9e\u9a8c",l={id:"Boards/DNK230D/example-ai/licence_det_rec",title:"\u8f66\u724c\u53f7\u8bc6\u522b\u5b9e\u9a8c",description:"\u524d\u8a00",source:"@site/docs/Boards/01_DNK230D/example-ai/licence_det_rec.md",sourceDirName:"Boards/01_DNK230D/example-ai",slug:"/Boards/DNK230D/example-ai/licence_det_rec",permalink:"/openedv_wiki/release/docs/Boards/DNK230D/example-ai/licence_det_rec",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:18,frontMatter:{title:"\u8f66\u724c\u53f7\u8bc6\u522b\u5b9e\u9a8c",sidebar_position:18},sidebar:"DNK230DSidebar",previous:{title:"\u8f66\u724c\u68c0\u6d4b\u5b9e\u9a8c",permalink:"/openedv_wiki/release/docs/Boards/DNK230D/example-ai/licence_det"},next:{title:"\u5173\u952e\u8bcd\u5524\u9192\u5b9e\u9a8c",permalink:"/openedv_wiki/release/docs/Boards/DNK230D/example-ai/keyword_spotting"}},t={},o=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"AI\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd",id:"ai\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd",level:2},{value:"\u786c\u4ef6\u8bbe\u8ba1",id:"\u786c\u4ef6\u8bbe\u8ba1",level:2},{value:"\u4f8b\u7a0b\u529f\u80fd",id:"\u4f8b\u7a0b\u529f\u80fd",level:3},{value:"\u786c\u4ef6\u8d44\u6e90",id:"\u786c\u4ef6\u8d44\u6e90",level:3},{value:"\u539f\u7406\u56fe",id:"\u539f\u7406\u56fe",level:3},{value:"\u5b9e\u9a8c\u4ee3\u7801",id:"\u5b9e\u9a8c\u4ee3\u7801",level:2},{value:"\u8fd0\u884c\u9a8c\u8bc1",id:"\u8fd0\u884c\u9a8c\u8bc1",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\u8f66\u724c\u53f7\u8bc6\u522b\u5b9e\u9a8c",children:"\u8f66\u724c\u53f7\u8bc6\u522b\u5b9e\u9a8c"})}),"\n",(0,s.jsx)(n.h2,{id:"\u524d\u8a00",children:"\u524d\u8a00"}),"\n",(0,s.jsx)(n.p,{children:"\u5728\u4e0a\u4e00\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u5982\u4f55\u5728CanMV\u4e0b\u4f7f\u7528CanMV AI\u89c6\u89c9\u5f00\u53d1\u6846\u67b6\u548cMicroPython\u7f16\u7a0b\u65b9\u6cd5\u5b9e\u73b0\u8f66\u724c\u68c0\u6d4b\u7684\u529f\u80fd\uff0c\u672c\u7ae0\u5c06\u901a\u8fc7\u8f66\u724c\u53f7\u8bc6\u522b\u5b9e\u9a8c\uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528CanMV AI\u89c6\u89c9\u5f00\u53d1\u6846\u67b6\u548cMicroPython\u7f16\u7a0b\u5b9e\u73b0\u8f66\u724c\u53f7\u8bc6\u522b\u7684\u529f\u80fd\u3002\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u91c7\u96c6\u6444\u50cf\u5934\u6355\u83b7\u7684\u56fe\u50cf\uff0c\u7136\u540e\u7ecf\u8fc7\u56fe\u50cf\u9884\u5904\u7406\u3001\u6a21\u578b\u63a8\u7406\u548c\u8f93\u51fa\u5904\u7406\u7ed3\u679c\u7b49\u4e00\u7cfb\u5217\u6b65\u9aa4\uff0c\u7cfb\u7edf\u5c06\u8bc6\u522b\u5230\u56fe\u50cf\u4e2d\u5b58\u5728\u8f66\u724c\u7684\u533a\u57df\uff0c\u7136\u540e\u5c06\u8be5\u533a\u57df\u7684\u56fe\u50cf\u8f93\u5165\u5230\u8f66\u724c\u53f7\u8bc6\u522b\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff0c\u4ece\u800c\u5c06\u8f66\u724c\u53f7\u8bc6\u522b\u51fa\u6765\u3002\u6700\u540e\uff0c\u5c06\u7ed3\u679c\u7ed8\u5236\u5e76\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\u3002\u901a\u8fc7\u672c\u7ae0\u7684\u5b66\u4e60\uff0c\u8bfb\u8005\u5c06\u638c\u63e1\u5982\u4f55\u5728CanMV\u4e0b\u4f7f\u7528CanMV AI\u89c6\u89c9\u5f00\u53d1\u6846\u67b6\u548cMicroPython\u7f16\u7a0b\u65b9\u6cd5\u5b9e\u73b0\u8f66\u724c\u53f7\u8bc6\u522b\u7684\u529f\u80fd\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"ai\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd",children:"AI\u5f00\u53d1\u6846\u67b6\u4ecb\u7ecd"}),"\n",(0,s.jsxs)(n.p,{children:["\u4e3a\u4e86\u7b80\u5316AI\u5f00\u53d1\u6d41\u7a0b\u5e76\u964d\u4f4eAI\u5f00\u53d1\u96be\u5ea6\uff0cCanMV\u5b98\u65b9\u9488\u5bf9K230D\u4e13\u95e8\u642d\u5efa\u4e86AI\u5f00\u53d1\u6846\u67b6\uff0c\u6709\u5173AI\u5f00\u53d1\u6846\u67b6\u7684\u4ecb\u7ecd\uff0c\u8bf7\u89c1",(0,s.jsx)(n.a,{href:"/openedv_wiki/release/docs/Boards/DNK230D/example-ai/development_framework",children:"CanMV AI\u5f00\u53d1\u6846\u67b6"})]}),"\n",(0,s.jsx)(n.h2,{id:"\u786c\u4ef6\u8bbe\u8ba1",children:"\u786c\u4ef6\u8bbe\u8ba1"}),"\n",(0,s.jsx)(n.h3,{id:"\u4f8b\u7a0b\u529f\u80fd",children:"\u4f8b\u7a0b\u529f\u80fd"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\u83b7\u53d6\u6444\u50cf\u5934\u8f93\u51fa\u7684\u56fe\u50cf\uff0c\u7136\u540e\u5c06\u56fe\u50cf\u8f93\u5165\u5230CanMV K230D\u7684AI\u6a21\u578b\u8fdb\u884c\u63a8\u7406\u3002\u672c\u5b9e\u9a8c\u4f7f\u7528\u4e86\u4e24\u4e2aAI\u6a21\u578b\uff0c\u4e00\u4e2a\u662f\u4e0a\u4e2a\u5b9e\u9a8c\u4f7f\u7528\u5230\u7684\u8f66\u724c\u68c0\u6d4b\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u53ef\u4ee5\u83b7\u53d6\u56fe\u50cf\u4e2d\u8f66\u724c\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u8f66\u724c\u53f7\u8bc6\u522b\u6a21\u578b\uff0c\u8f66\u724c\u53f7\u8bc6\u522b\u6a21\u578b\u53ef\u4ee5\u5c06\u8f66\u724c\u7684\u8f66\u724c\u53f7\u89e3\u6790\u51fa\u6765\u3002\u901a\u8fc7\u8fd9\u4e24\u4e2a\u6a21\u578b\u7684\u914d\u5408\u4f7f\u7528\uff0c\u80fd\u591f\u51c6\u786e\u7684\u83b7\u53d6\u56fe\u50cf\u4e2d\u7684\u8f66\u724c\u533a\u57df\u5e76\u753b\u77e9\u5f62\u6846\u8fdb\u884c\u6807\u6ce8\uff0c\u540c\u65f6\u5728\u77e9\u5f62\u6846\u4e0a\u65b9\u7ed8\u5236\u8bc6\u522b\u5230\u7684\u8f66\u724c\u53f7\u3002\u6700\u540e\uff0c\u5c06\u5904\u7406\u540e\u7684\u56fe\u50cf\u663e\u793a\u5728LCD\u4e0a\u3002"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\u786c\u4ef6\u8d44\u6e90",children:"\u786c\u4ef6\u8d44\u6e90"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\u672c\u7ae0\u5b9e\u9a8c\u5185\u5bb9\u4e3b\u8981\u8bb2\u89e3K230D\u7684\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5668KPU\u7684\u4f7f\u7528\uff0c\u65e0\u9700\u5173\u6ce8\u786c\u4ef6\u8d44\u6e90\u3002"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\u539f\u7406\u56fe",children:"\u539f\u7406\u56fe"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\u672c\u7ae0\u5b9e\u9a8c\u5185\u5bb9\u4e3b\u8981\u8bb2\u89e3K230D\u7684\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5668KPU\u7684\u4f7f\u7528\uff0c\u65e0\u9700\u5173\u6ce8\u539f\u7406\u56fe\u3002"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u5b9e\u9a8c\u4ee3\u7801",children:"\u5b9e\u9a8c\u4ee3\u7801"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from libs.PipeLine import PipeLine, ScopedTiming\nfrom libs.AIBase import AIBase\nfrom libs.AI2D import Ai2d\nimport os\nimport ujson\nfrom media.media import *\nfrom media.sensor import *\nfrom time import *\nimport nncase_runtime as nn\nimport ulab.numpy as np\nimport time\nimport image\nimport aidemo\nimport random\nimport gc\nimport sys\n\n# \u81ea\u5b9a\u4e49\u8f66\u724c\u68c0\u6d4b\u7c7b\nclass LicenceDetectionApp(AIBase):\n    # \u521d\u59cb\u5316\u51fd\u6570\uff0c\u8bbe\u7f6e\u8f66\u724c\u68c0\u6d4b\u5e94\u7528\u7684\u53c2\u6570\n    def __init__(self, kmodel_path, model_input_size, confidence_threshold=0.5, nms_threshold=0.2, rgb888p_size=[224,224], display_size=[1920,1080], debug_mode=0):\n        super().__init__(kmodel_path, model_input_size, rgb888p_size, debug_mode)  # \u8c03\u7528\u57fa\u7c7b\u7684\u521d\u59cb\u5316\u51fd\u6570\n        self.kmodel_path = kmodel_path  # \u6a21\u578b\u8def\u5f84\n        # \u6a21\u578b\u8f93\u5165\u5206\u8fa8\u7387\n        self.model_input_size = model_input_size\n        # \u5206\u7c7b\u9608\u503c\n        self.confidence_threshold = confidence_threshold\n        self.nms_threshold = nms_threshold\n        # sensor\u7ed9\u5230AI\u7684\u56fe\u50cf\u5206\u8fa8\u7387\n        self.rgb888p_size = [ALIGN_UP(rgb888p_size[0], 16), rgb888p_size[1]]\n        # \u663e\u793a\u5206\u8fa8\u7387\n        self.display_size = [ALIGN_UP(display_size[0], 16), display_size[1]]\n        self.debug_mode = debug_mode\n        # Ai2d\u5b9e\u4f8b\uff0c\u7528\u4e8e\u5b9e\u73b0\u6a21\u578b\u9884\u5904\u7406\n        self.ai2d = Ai2d(debug_mode)\n        # \u8bbe\u7f6eAi2d\u7684\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u548c\u7c7b\u578b\n        self.ai2d.set_ai2d_dtype(nn.ai2d_format.NCHW_FMT, nn.ai2d_format.NCHW_FMT, np.uint8, np.uint8)\n\n    # \u914d\u7f6e\u9884\u5904\u7406\u64cd\u4f5c\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86pad\u548cresize\uff0cAi2d\u652f\u6301crop/shift/pad/resize/affine\n    def config_preprocess(self, input_image_size=None):\n        with ScopedTiming("set preprocess config", self.debug_mode > 0):\n            # \u521d\u59cb\u5316ai2d\u9884\u5904\u7406\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e3asensor\u7ed9\u5230AI\u7684\u5c3a\u5bf8\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6einput_image_size\u81ea\u884c\u4fee\u6539\u8f93\u5165\u5c3a\u5bf8\n            ai2d_input_size = input_image_size if input_image_size else self.rgb888p_size\n            self.ai2d.resize(nn.interp_method.tf_bilinear, nn.interp_mode.half_pixel)\n            self.ai2d.build([1,3,ai2d_input_size[1],ai2d_input_size[0]],[1,3,self.model_input_size[1],self.model_input_size[0]])\n\n    # \u81ea\u5b9a\u4e49\u5f53\u524d\u4efb\u52a1\u7684\u540e\u5904\u7406\n    def postprocess(self, results):\n        with ScopedTiming("postprocess", self.debug_mode > 0):\n            # \u5bf9\u68c0\u6d4b\u7ed3\u679c\u8fdb\u884c\u540e\u5904\u7406\n            det_res = aidemo.licence_det_postprocess(results, [self.rgb888p_size[1], self.rgb888p_size[0]], self.model_input_size, self.confidence_threshold, self.nms_threshold)\n            return det_res\n\n# \u81ea\u5b9a\u4e49\u8f66\u724c\u8bc6\u522b\u4efb\u52a1\u7c7b\nclass LicenceRecognitionApp(AIBase):\n    def __init__(self,kmodel_path,model_input_size,rgb888p_size=[1920,1080],display_size=[1920,1080],debug_mode=0):\n        super().__init__(kmodel_path,model_input_size,rgb888p_size,debug_mode)\n        # kmodel\u8def\u5f84\n        self.kmodel_path=kmodel_path\n        # \u68c0\u6d4b\u6a21\u578b\u8f93\u5165\u5206\u8fa8\u7387\n        self.model_input_size=model_input_size\n        # sensor\u7ed9\u5230AI\u7684\u56fe\u50cf\u5206\u8fa8\u7387\uff0c\u5bbd16\u5b57\u8282\u5bf9\u9f50\n        self.rgb888p_size=[ALIGN_UP(rgb888p_size[0],16),rgb888p_size[1]]\n        # \u89c6\u9891\u8f93\u51faVO\u5206\u8fa8\u7387\uff0c\u5bbd16\u5b57\u8282\u5bf9\u9f50\n        self.display_size=[ALIGN_UP(display_size[0],16),display_size[1]]\n        # debug\u6a21\u5f0f\n        self.debug_mode=debug_mode\n        # \u8f66\u724c\u5b57\u7b26\u5b57\u5178\n        self.dict_rec = ["\u6302", "\u4f7f", "\u9886", "\u6fb3", "\u6e2f", "\u7696", "\u6caa", "\u6d25", "\u6e1d", "\u5180", "\u664b", "\u8499", "\u8fbd", "\u5409", "\u9ed1", "\u82cf", "\u6d59", "\u4eac", "\u95fd", "\u8d63", "\u9c81", "\u8c6b", "\u9102", "\u6e58", "\u7ca4", "\u6842", "\u743c", "\u5ddd", "\u8d35", "\u4e91", "\u85cf", "\u9655", "\u7518", "\u9752", "\u5b81", "\u65b0", "\u8b66", "\u5b66", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "_", "-"]\n        self.dict_size = len(self.dict_rec)\n        self.ai2d=Ai2d(debug_mode)\n        self.ai2d.set_ai2d_dtype(nn.ai2d_format.NCHW_FMT,nn.ai2d_format.NCHW_FMT,np.uint8, np.uint8)\n\n    # \u914d\u7f6e\u9884\u5904\u7406\u64cd\u4f5c\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86resize\uff0cAi2d\u652f\u6301crop/shift/pad/resize/affine\n    def config_preprocess(self,input_image_size=None):\n        with ScopedTiming("set preprocess config",self.debug_mode > 0):\n            ai2d_input_size=input_image_size if input_image_size else self.rgb888p_size\n            self.ai2d.resize(nn.interp_method.tf_bilinear, nn.interp_mode.half_pixel)\n            self.ai2d.build([1,3,ai2d_input_size[1],ai2d_input_size[0]],[1,3,self.model_input_size[1],self.model_input_size[0]])\n\n    # \u81ea\u5b9a\u4e49\u540e\u5904\u7406\uff0cresults\u662f\u6a21\u578b\u8f93\u51fa\u7684array\u5217\u8868\n    def postprocess(self,results):\n        with ScopedTiming("postprocess",self.debug_mode > 0):\n            output_data=results[0].reshape((-1,self.dict_size))\n            max_indices = np.argmax(output_data, axis=1)\n            result_str = ""\n            for i in range(max_indices.shape[0]):\n                index = max_indices[i]\n                if index > 0 and (i == 0 or index != max_indices[i - 1]):\n                    result_str += self.dict_rec[index - 1]\n            return result_str\n\n# \u8f66\u724c\u8bc6\u522b\u4efb\u52a1\u7c7b\nclass LicenceRec:\n    def __init__(self,licence_det_kmodel,licence_rec_kmodel,det_input_size,rec_input_size,confidence_threshold=0.25,nms_threshold=0.3,rgb888p_size=[1920,1080],display_size=[1920,1080],debug_mode=0):\n        # \u8f66\u724c\u68c0\u6d4b\u6a21\u578b\u8def\u5f84\n        self.licence_det_kmodel=licence_det_kmodel\n        # \u8f66\u724c\u8bc6\u522b\u6a21\u578b\u8def\u5f84\n        self.licence_rec_kmodel=licence_rec_kmodel\n        # \u4eba\u8138\u68c0\u6d4b\u6a21\u578b\u8f93\u5165\u5206\u8fa8\u7387\n        self.det_input_size=det_input_size\n        # \u4eba\u8138\u59ff\u6001\u6a21\u578b\u8f93\u5165\u5206\u8fa8\u7387\n        self.rec_input_size=rec_input_size\n        # \u7f6e\u4fe1\u5ea6\u9608\u503c\n        self.confidence_threshold=confidence_threshold\n        # nms\u9608\u503c\n        self.nms_threshold=nms_threshold\n        # sensor\u7ed9\u5230AI\u7684\u56fe\u50cf\u5206\u8fa8\u7387\uff0c\u5bbd16\u5b57\u8282\u5bf9\u9f50\n        self.rgb888p_size=[ALIGN_UP(rgb888p_size[0],16),rgb888p_size[1]]\n        # \u89c6\u9891\u8f93\u51faVO\u5206\u8fa8\u7387\uff0c\u5bbd16\u5b57\u8282\u5bf9\u9f50\n        self.display_size=[ALIGN_UP(display_size[0],16),display_size[1]]\n        # debug_mode\u6a21\u5f0f\n        self.debug_mode=debug_mode\n        self.licence_det=LicenceDetectionApp(self.licence_det_kmodel,model_input_size=self.det_input_size,confidence_threshold=self.confidence_threshold,nms_threshold=self.nms_threshold,rgb888p_size=self.rgb888p_size,display_size=self.display_size,debug_mode=0)\n        self.licence_rec=LicenceRecognitionApp(self.licence_rec_kmodel,model_input_size=self.rec_input_size,rgb888p_size=self.rgb888p_size)\n        self.licence_det.config_preprocess()\n\n    # run\u51fd\u6570\n    def run(self,input_np):\n        # \u6267\u884c\u8f66\u724c\u68c0\u6d4b\n        det_boxes=self.licence_det.run(input_np)\n        # \u5c06\u8f66\u724c\u90e8\u5206\u62a0\u51fa\u6765\n        imgs_array_boxes = aidemo.ocr_rec_preprocess(input_np,[self.rgb888p_size[1],self.rgb888p_size[0]],det_boxes)\n        imgs_array = imgs_array_boxes[0]\n        boxes = imgs_array_boxes[1]\n        rec_res = []\n        for img_array in imgs_array:\n            # \u5bf9\u6bcf\u4e00\u4e2a\u68c0\u6d4b\u5230\u7684\u8f66\u724c\u8fdb\u884c\u8bc6\u522b\n            self.licence_rec.config_preprocess(input_image_size=[img_array.shape[3],img_array.shape[2]])\n            licence_str=self.licence_rec.run(img_array)\n            rec_res.append(licence_str)\n            gc.collect()\n        return det_boxes,rec_res\n\n    # \u7ed8\u5236\u8f66\u724c\u68c0\u6d4b\u8bc6\u522b\u6548\u679c\n    def draw_result(self,pl,det_res,rec_res):\n        pl.osd_img.clear()\n        if det_res:\n            point_8 = np.zeros((8),dtype=np.int16)\n            for det_index in range(len(det_res)):\n                for i in range(4):\n                    x = det_res[det_index][i * 2 + 0]/self.rgb888p_size[0]*self.display_size[0]\n                    y = det_res[det_index][i * 2 + 1]/self.rgb888p_size[1]*self.display_size[1]\n                    point_8[i * 2 + 0] = int(x)\n                    point_8[i * 2 + 1] = int(y)\n                for i in range(4):\n                    pl.osd_img.draw_line(point_8[i * 2 + 0],point_8[i * 2 + 1],point_8[(i+1) % 4 * 2 + 0],point_8[(i+1) % 4 * 2 + 1],color=(255, 0, 255, 0),thickness=4)\n                pl.osd_img.draw_string_advanced( point_8[6], point_8[7] + 20, 40,rec_res[det_index] , color=(255,255,153,18))\n\n\nif __name__=="__main__":\n    # \u663e\u793a\u6a21\u5f0f\uff0c\u9ed8\u8ba4"lcd"\n    display_mode="lcd"\n    display_size=[640,480]\n    # \u8f66\u724c\u68c0\u6d4b\u6a21\u578b\u8def\u5f84\n    licence_det_kmodel_path="/sdcard/examples/kmodel/LPD_640.kmodel"\n    # \u8f66\u724c\u8bc6\u522b\u6a21\u578b\u8def\u5f84\n    licence_rec_kmodel_path="/sdcard/examples/kmodel/licence_reco.kmodel"\n    # \u5176\u5b83\u53c2\u6570\n    rgb888p_size=[640,360]\n    licence_det_input_size=[640,640]\n    licence_rec_input_size=[220,32]\n    confidence_threshold=0.2\n    nms_threshold=0.2\n\n    # \u521d\u59cb\u5316PipeLine\uff0c\u53ea\u5173\u6ce8\u4f20\u7ed9AI\u7684\u56fe\u50cf\u5206\u8fa8\u7387\uff0c\u663e\u793a\u7684\u5206\u8fa8\u7387\n    sensor = Sensor(width=1280, height=960) # \u6784\u5efa\u6444\u50cf\u5934\u5bf9\u8c61\n    pl = PipeLine(rgb888p_size=rgb888p_size, display_size=display_size, display_mode=display_mode)\n    pl.create(sensor=sensor)  # \u521b\u5efaPipeLine\u5b9e\u4f8b\n    lr=LicenceRec(licence_det_kmodel_path,licence_rec_kmodel_path,det_input_size=licence_det_input_size,rec_input_size=licence_rec_input_size,confidence_threshold=confidence_threshold,nms_threshold=nms_threshold,rgb888p_size=rgb888p_size,display_size=display_size)\n    try:\n        while True:\n            os.exitpoint()\n            with ScopedTiming("total",1):\n                img=pl.get_frame()                  # \u83b7\u53d6\u5f53\u524d\u5e27\n                det_res,rec_res=lr.run(img)         # \u63a8\u7406\u5f53\u524d\u5e27\n                # print(det_res, rec_res)             # \u6253\u5370\u7ed3\u679c\n                lr.draw_result(pl,det_res,rec_res)  # \u7ed8\u5236\u5f53\u524d\u5e27\u63a8\u7406\u7ed3\u679c\n                pl.show_image()                     # \u5c55\u793a\u63a8\u7406\u7ed3\u679c\n                gc.collect()\n    except Exception as e:\n        sys.print_exception(e)\n    finally:\n        lr.licence_det.deinit()\n        lr.licence_rec.deinit()\n        pl.destroy()\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u53ef\u4ee5\u770b\u5230\u4e00\u5f00\u59cb\u662f\u5148\u5b9a\u4e49\u663e\u793a\u6a21\u5f0f\u3001\u56fe\u50cf\u5927\u5c0f\u3001\u6a21\u578b\u76f8\u5173\u7684\u4e00\u4e9b\u53d8\u91cf\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u63a5\u7740\u662f\u901a\u8fc7\u521d\u59cb\u5316PipeLine\uff0c\u8fd9\u91cc\u4e3b\u8981\u521d\u59cb\u5316sensor\u548cdisplay\u6a21\u5757\uff0c\u914d\u7f6e\u6444\u50cf\u5934\u8f93\u51fa\u4e24\u8def\u4e0d\u540c\u7684\u683c\u5f0f\u548c\u5927\u5c0f\u7684\u56fe\u50cf\uff0c\u4ee5\u53ca\u8bbe\u7f6e\u663e\u793a\u6a21\u5f0f\uff0c\u5b8c\u6210\u521b\u5efaPipeLine\u5b9e\u4f8b\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u7136\u540e\u8c03\u7528\u81ea\u5b9a\u4e49LicenceRec\u7c7b\u6784\u5efa\u8f66\u724c\u53f7\u8bc6\u522b\u7c7b\uff0cLicenceRec\u7c7b\u4f1a\u5bf9AIBase\u63a5\u53e3\u521d\u59cb\u5316\u4ee5\u53ca\u4f7f\u7528Ai2D\u63a5\u53e3\u7684\u65b9\u6cd5\u5b9a\u4e49\u8f66\u724c\u68c0\u6d4b\u6a21\u578b\u548c\u8f66\u724c\u53f7\u8bc6\u522b\u6a21\u578b\u8f93\u5165\u56fe\u50cf\u7684\u9884\u5904\u7406\u65b9\u6cd5\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u6700\u540e\uff0c\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u4e0d\u65ad\u83b7\u53d6\u6444\u50cf\u5934\u8f93\u51fa\u7684RGB888\u683c\u5f0f\u56fe\u50cf\u5e27\uff0c\u7136\u540e\u5c06\u56fe\u50cf\u4f9d\u6b21\u8f93\u5165\u5230\u8f66\u724c\u68c0\u6d4b\u6a21\u578b\u548c\u8f66\u724c\u53f7\u8bc6\u522b\u6a21\u578b\u8fdb\u884c\u63a8\u7406\u3002\u63a8\u7406\u7ed3\u679c\u901a\u8fc7print\u6253\u5370\u51fa\u6765\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u6a21\u578b\u8f93\u51fa\u7684\u7ed3\u679c\u4f7f\u7528\u7eff\u8272\u77e9\u5f62\u6846\u5c06\u8f66\u724c\u533a\u57df\u6846\u51fa\uff0c\u540c\u65f6\u5728\u77e9\u5f62\u6846\u4e0a\u65b9\u7ed8\u5236\u8bc6\u522b\u5230\u7684\u8f66\u724c\u53f7\u4fe1\u606f\uff0c\u6700\u540e\u5728LCD\u4e0a\u663e\u793a\u5904\u7406\u540e\u7684\u56fe\u50cf\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"\u8fd0\u884c\u9a8c\u8bc1",children:"\u8fd0\u884c\u9a8c\u8bc1"}),"\n",(0,s.jsx)(n.p,{children:"\u5b9e\u9a8c\u539f\u56fe\u5982\u4e0b\u6240\u793a\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"01",src:i(341).A+"",width:"720",height:"340"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"01",src:i(5071).A+"",width:"721",height:"276"})}),"\n",(0,s.jsx)(n.p,{children:"\u5c06K230D BOX\u5f00\u53d1\u677f\u8fde\u63a5CanMV IDE\uff0c\u70b9\u51fbCanMV IDE\u4e0a\u7684\u201c\u5f00\u59cb(\u8fd0\u884c\u811a\u672c)\u201d\u6309\u94ae\u540e\uff0c\u5c06\u6444\u50cf\u5934\u5bf9\u51c6\u542b\u6709\u8f66\u724c\u7684\u533a\u57df\uff0c\u8ba9\u5176\u91c7\u96c6\u5230\u9700\u8bc6\u522b\u7684\u8f66\u724c\uff0c\u968f\u540e\u4fbf\u80fd\u5728LCD\u4e0a\u770b\u5230\u6444\u50cf\u5934\u8f93\u51fa\u7684\u56fe\u50cf\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u56fe\u50cf\u4e2d\u7684\u8f66\u724c\u533a\u57df\u4f1a\u88ab\u7eff\u8272\u7684\u77e9\u5f62\u6846\u6846\u51fa\uff0c\u8f66\u724c\u53f7\u5728\u77e9\u5f62\u6846\u4e0a\u65b9\u663e\u793a\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"01",src:i(2049).A+"",width:"519",height:"383"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"01",src:i(5802).A+"",width:"517",height:"380"})}),"\n",(0,s.jsx)(n.p,{children:"\u70b9\u51fb\u5de6\u4e0b\u89d2\u201c\u4e32\u884c\u7ec8\u7aef\u201d\uff0c\u53ef\u4ee5\u770b\u5230\u201c\u4e32\u884c\u7ec8\u7aef\u201d\u7a97\u53e3\u4e2d\u8f93\u51fa\u4e86\u4e00\u7cfb\u5217\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"01",src:i(5635).A+"",width:"962",height:"162"})}),"\n",(0,s.jsxs)(n.p,{children:["\u53ef\u4ee5\u770b\u5230\uff0c\u7cfb\u7edf\u6bcf\u6b21\u6253\u5370\u8f93\u51fa\u4e24\u7ec4\u6570\u636e\uff0c\u7b2c\u4e00\u7ec4\u662f\u4e0a\u4e2a\u5b9e\u9a8c\u4f7f\u7528\u7684\u8f66\u724c\u68c0\u6d4b\u6a21\u578b\u63a8\u7406\u8f93\u51fa\u7684\uff0c\u8868\u793a\u8f66\u724c\u6240\u5728\u533a\u57df\u76844\u4e2a\u9876\u70b9\u7684\u5750\u6807\uff0c\u8fd9\u91cc\u4e0d\u518d\u53d9\u8ff0\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u662f\u4e00\u7ec4\u5b57\u7b26\u4e32\uff0c\u7531\u8f66\u724c\u53f7\u8bc6\u522b\u6a21\u578b\u63a8\u7406\u8f93\u51fa\uff0c\u5b57\u7b26\u4e32\u4e3a**",(0,s.jsx)(n.code,{children:"u7ca4A68688"}),"**\uff0cu7ca4\u662f\u201d\u7ca4\u201c\u5b57\u7684\u4e2d\u6587\u5b57\u7b26\u7f16\u7801\uff0cA68688\u662f\u8f66\u724c\u53f7\u7f16\u7801\uff0c\u901a\u8fc7\u8fd9\u4e24\u7ec4\u6570\u636e\uff0c\u4fbf\u53ef\u83b7\u5f97\u56fe\u50cf\u4e2d\u8f66\u724c\u7684\u533a\u57df\u4ee5\u53ca\u8f66\u724c\u53f7\u3002"]})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},341:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/46-6d11fd39e966ffccba8ff9676bc017c7.png"},5071:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/47-2554cdb7488af388bd43abc5be9e5f06.png"},2049:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/51-123a9d518f22d92b435129c011f33855.png"},5802:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/52-1407bca14f92542b619a8792a5924178.png"},5635:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/53-13b000ed8fe91cd9b6eeb89b4062b506.png"},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const d={},_=s.createContext(d);function r(e){const n=s.useContext(_);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(_.Provider,{value:n},e.children)}}}]);